{"version":3,"sources":["component/Login.js","App.js","reportWebVitals.js","index.js"],"names":["Modal","setAppElement","Login","React","useState","inputName","setInputName","inputPass","setInputPass","nameDisplay","setNameDisplay","passUpper","setPassUpper","passLower","setPassLower","passNumber","setPassNumber","passChar","setPassChar","passLength","setPassLength","namBox","setNamBox","passBox","setPassBox","passType","setPassType","successModal","errorModal","modalOpen","setModalOpen","handelBox","e","target","id","length","showError","preventDefault","className","onSubmit","type","value","onChange","test","handelName","required","title","style","backgroundColor","border","color","cursor","onClick","handelPassword","width","marginBottom","fontSize","verticalAlign","textAlign","isOpen","onRequestClose","overlay","content","paddingTop","marginLeft","marginRight","borderRadius","fontWeight","height","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAKAA,IAAMC,cAAc,SAkPLC,MAhPf,WACI,MAA+BC,IAAMC,SAAS,IAA9C,mBAAKC,EAAL,KAAeC,EAAf,KACA,EAAgCH,IAAMC,SAAS,IAA/C,mBAAKG,EAAL,KAAgBC,EAAhB,KACA,EAAmCL,IAAMC,SAAS,WAAlD,mBAAKK,EAAL,KAAiBC,EAAjB,KACA,EAAgCP,IAAMC,SAAS,WAA/C,mBAAKO,EAAL,KAAgBC,EAAhB,KACA,EAAgCT,IAAMC,SAAS,WAA/C,mBAAKS,EAAL,KAAgBC,EAAhB,KACA,EAAkCX,IAAMC,SAAS,WAAjD,mBAAKW,EAAL,KAAiBC,EAAjB,KACA,EAA8Bb,IAAMC,SAAS,WAA7C,mBAAKa,EAAL,KAAeC,EAAf,KACA,EAAkCf,IAAMC,SAAS,WAAjD,mBAAKe,EAAL,KAAiBC,EAAjB,KACA,EAA2BjB,IAAMC,SAAS,IAA1C,mBAAKiB,EAAL,KAAcC,EAAd,KACA,EAA4BnB,IAAMC,SAAS,IAA3C,mBAAKmB,EAAL,KAAcC,EAAd,KACA,EAA8BrB,IAAMC,UAAS,GAA7C,mBAAKqB,EAAL,KAAeC,EAAf,KACA,EAAiCvB,IAAMC,SAAS,CAC5CuB,cAAe,EACfC,YAAa,IAFjB,mBAAKC,EAAL,KAAiBC,EAAjB,KAkEA,SAASC,GAAUC,GACI,aAAhBA,EAAEC,OAAOC,GACe,GAApB7B,EAAU8B,OACTb,EAAU,IAEU,UAAhBb,EACJa,EAAUD,EAAS,WAEC,YAAhBZ,GACJa,EAAUD,EAAS,SAGH,aAAhBW,EAAEC,OAAOC,KACU,GAApB3B,EAAU4B,OACTX,EAAWD,EAAU,IAGrBC,EAAWD,EADO,UAAdV,GAAuC,UAAdF,GAAwC,UAAfI,GAAuC,UAAbE,GAAuC,UAAfE,EACnF,UAIA,UA6BjC,SAASiB,GAAUJ,GACfA,EAAEK,iBACFP,EAAa,2BAAID,GAAL,IACRF,cAAe,EACfC,YAAW,KAMnB,OAAO,sBAAKU,UAAU,WAAf,UACH,oBAAIJ,GAAI,SAAR,wBACA,uBAAMI,UAAU,WAAWC,SAAY,SAACP,GAAD,OAAKA,EAAEK,kBAA9C,UACI,+CAEI,uBACA,uBAAOG,KAAK,OAAOF,UAAWjB,EAAQa,GAAG,WAAWO,MAAOpC,EAAWqC,SAAU,SAACV,IAtG7F,SAAoBA,GAEhB1B,EAAaD,EAAY2B,EAAEC,OAAOQ,OAE9B,oBAAqBE,KAAKtC,GAC1BK,EAAeD,EAAY,SAG3BC,EAAeD,EAAY,WA8F+DmC,CAAWZ,GAAID,GAAUC,IAAKa,UAAQ,IAC3HxB,EAAoB,YAAXA,EAAuB,wBAAQyB,MAAM,kBAAkBC,MAAO,CAACC,gBAAgB,cAAcC,OAAO,QAA7E,SAAsF,cAAC,IAAD,CAAYC,MAAM,YAAsB,wBAAQJ,MAAM,0BAA0BC,MAAO,CAACC,gBAAgB,cAAcC,OAAO,OAAOE,OAAO,WAAYC,QAAShB,GAAxH,SAAmI,cAAC,IAAD,CAAcc,MAAM,UAAmB,QAE7U,uBAEA,+CAEI,uBACA,uBAAOV,KAAMf,EAAW,WAAa,OAAQa,UAAWf,EAASW,GAAG,WAAWO,MAAOlC,EAAWmC,SAAU,SAACV,IAnGxH,SAAwBA,GACpBxB,EAAaD,EAAYyB,EAAEC,OAAOQ,OAC/B,SAASE,KAAKpC,GACbK,EAAa,SAGbA,EAAa,WAId,SAAS+B,KAAKpC,GACbO,EAAa,SAGbA,EAAa,WAIjB,SAAS6B,KAAKpC,GAAaS,EAAc,SAAWA,EAAc,WAElE,wBAAwB2B,KAAKpC,GAAaW,EAAY,SAAWA,EAAY,WAE7EX,EAAU4B,QAAU,EAAIf,EAAc,SAAWA,EAAc,WA6E0DiC,CAAerB,GAAID,GAAUC,IAAKa,UAAQ,IAC1JtB,EAAsB,YAAZA,EAAwB,wBAASuB,MAAM,kBAAkBC,MAAO,CAACC,gBAAgB,cAAcC,OAAO,QAA9E,SAAuF,cAAC,IAAD,CAAYC,MAAM,YAAqB,wBAAQJ,MAAM,0BAA0BC,MAAO,CAACC,gBAAgB,cAAcC,OAAO,OAAOE,OAAO,WAAYC,QAAShB,GAAxH,SAAmI,cAAC,IAAD,CAAcc,MAAM,UAAmB,QAG7U,uBAAK,uBAAOV,KAAK,WAAWE,SAAU,kBAAIhB,GAAaD,IAAUsB,MAAO,CAACO,MAAM,OAAQC,aAAa,UAAU,sBAAMR,MAAO,CAACS,SAAS,OAAOC,cAAc,OAA5C,6BAEhH,uBAEA,qBAAKV,MAAS,CAACW,UAAU,UAAzB,SAAoC,wBAAQpB,UAAY,MAAMc,QAAW,WAClE/C,EAAU8B,OAAS,GAAK5B,EAAU4B,OAAS,GArDlDL,EADY,SAAfrB,GAAwC,UAAdI,GAAuC,UAAdF,GAAwC,UAAfI,GAAuC,UAAbE,GAAuC,UAAfE,EAC9G,2BAAIU,GAAL,IACRF,cAAe,EACfC,YAAW,IAIF,2BAAIC,GAAL,IACRF,cAAe,EACfC,YAAW,MA4CqB,yBAQxC,eAAC,IAAD,CAAO+B,OAAQ9B,EAAUD,WACjBgC,eAAgB,kBAAI9B,EAAa,2BAAID,GAAL,IAC5BF,cAAe,EACfC,YAAW,MAElBmB,MACG,CACIc,QAAU,CACNb,gBAAgB,QAEpBc,QAAQ,CAEJC,WAAa,QACbd,OAAO,iBACPD,gBAAgB,UAChBM,MAAQ,QACRU,WAAY,OACZC,YAAY,SAjB5B,UAuBA,sBAAK3B,UAAU,YAAf,UACI,oBAAIS,MAAO,CAACW,UAAU,SAAtB,2CACA,qBAAKpB,UAAU,YAAf,SAA4B,oBAAGJ,GAAG,OAAOI,UAAY7B,EAAzB,UAAsC,4DAAtC,mBAG5B,oBAAIsC,MAAO,CAACW,UAAU,SAAtB,kDACA,sBAAKpB,UAAU,YAAf,UACI,oBAAGJ,GAAG,SAASI,UAAWzB,EAA1B,eAAuC,0CAAvC,aACA,oBAAGqB,GAAG,UAAUI,UAAW3B,EAA3B,eAAwC,oDAAxC,aACA,oBAAGuB,GAAG,SAASI,UAAWvB,EAA1B,eAAwC,0CACxC,oBAAGmB,GAAG,UAAUI,UAAWrB,EAA3B,eAAuC,mDAAvC,gBACA,oBAAGiB,GAAG,SAASI,UAAWnB,EAA1B,qBAA8C,sDAGtD,qBAAK4B,MAAO,CAACW,UAAU,UAAvB,SAAkC,wBAAQX,MAAO,CAACI,OAAO,UAAUe,aAAa,OAAOlB,gBAAgB,UAAUmB,WAAW,OAAQf,QApFxI,WACItB,EAAa,2BAAID,GAAL,IACRF,cAAe,EACfC,YAAW,MAiFmB,yBAGlC,cAAC,IAAD,CAAO+B,OAAQ9B,EAAUF,aACrBiC,eAAgB,kBAAI9B,EAAa,2BAAID,GAAL,IAC5BF,cAAe,EACfC,YAAW,MAEfmB,MACI,CACIc,QAAU,CACNb,gBAAgB,QAEpBc,QAAQ,CACJJ,UAAU,SACVK,WAAa,QACbd,OAAO,mBACPD,gBAAgB,UAChBM,MAAQ,QACRU,WAAY,OACZC,YAAY,OACZG,OAAQ,UAlBxB,SAuBI,sBAAK9B,UAAU,cAAf,UACI,sDACA,gEACA,wBAAQS,MAAO,CAACI,OAAO,UAAUe,aAAa,OAAOlB,gBAAgB,UAAUmB,WAAW,OAAQf,QAjN9G,WACI9C,EAAa,IACbE,EAAa,IACbE,EAAe,WACfE,EAAa,WACbE,EAAa,WACbE,EAAc,WACdE,EAAY,WACZE,EAAc,WACdE,EAAU,IACVE,EAAW,IACXM,EAAa,2BAAID,GAAL,IACRF,cAAe,EACfC,YAAW,MAoMP,gC,MCrODyC,MATf,WAEE,OACE,qBAAK/B,UAAU,MAAf,SACC,cAAC,EAAD,OCKUgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.25ada490.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {FaThumbsUp, FaThumbsDown} from \"react-icons/fa\";\r\nimport Modal from \"react-modal\";\r\nimport \"./login.css\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nfunction Login(){\r\n    let [inputName,setInputName] = React.useState(\"\");\r\n    let [inputPass, setInputPass] = React.useState(\"\")\r\n    let [nameDisplay,setNameDisplay] = React.useState(\"invalid\");\r\n    let [passUpper, setPassUpper] = React.useState(\"invalid\");\r\n    let [passLower, setPassLower] = React.useState(\"invalid\");\r\n    let [passNumber, setPassNumber] = React.useState(\"invalid\");\r\n    let [passChar, setPassChar] = React.useState(\"invalid\");\r\n    let [passLength, setPassLength] = React.useState(\"invalid\");\r\n    let [namBox , setNamBox] = React.useState(\"\");\r\n    let [passBox, setPassBox] = React.useState(\"\");\r\n    let [passType, setPassType] = React.useState(true);\r\n    let [modalOpen , setModalOpen] = React.useState({\r\n        successModal : false,\r\n        errorModal : false\r\n    });\r\n    \r\n    // let [passDisplay,setPassDisplay] = React.useState({\r\n    //     upper:\"invalid\",\r\n    //     lower:\"invalid\",\r\n    //     number:\"invalid\",\r\n    //     splChar:\"invalid\",\r\n    //     length : \"invalid\"\r\n    // });\r\n\r\n    function reSet(){\r\n        setInputName(\"\");\r\n        setInputPass(\"\");\r\n        setNameDisplay(\"invalid\");\r\n        setPassUpper(\"invalid\");\r\n        setPassLower(\"invalid\");\r\n        setPassNumber(\"invalid\");\r\n        setPassChar(\"invalid\");\r\n        setPassLength(\"invalid\");\r\n        setNamBox(\"\");\r\n        setPassBox(\"\");\r\n        setModalOpen({...modalOpen,\r\n            successModal : false,\r\n            errorModal:false\r\n        });\r\n    }\r\n\r\n    function handelName(e){\r\n\r\n        setInputName(inputName = e.target.value);\r\n        //(/[\\w.]+/g).test(input.name) && input.name.length > 0 ? setNameDisplay(nameDisplay=\"namValid\") : setNameDisplay(nameDisplay=\"namInvalid\");   \r\n        if((/^[a-zA-Z0-9_.]+$/g).test(inputName))  {\r\n            setNameDisplay(nameDisplay=\"valid\");\r\n        }\r\n        else{\r\n            setNameDisplay(nameDisplay=\"invalid\");\r\n        }\r\n    }\r\n    function handelPassword(e){\r\n        setInputPass(inputPass = e.target.value);\r\n        if(/[A-Z]/g.test(inputPass)){\r\n            setPassUpper(\"valid\");\r\n            //console.log(\"upper->\",passUpper);\r\n        }else{\r\n            setPassUpper(\"invalid\");\r\n            //console.log(\"upper->\",passUpper);\r\n        }\r\n        \r\n        if(/[a-z]/g.test(inputPass)){\r\n            setPassLower(\"valid\");\r\n            //console.log(\"lower->\",passLower);\r\n        }else{\r\n            setPassLower(\"invalid\");\r\n            //console.log(\"lower->\",passLower);\r\n        }\r\n        \r\n        /[0-9]/g.test(inputPass) ? setPassNumber(\"valid\") : setPassNumber(\"invalid\");\r\n        \r\n        /[_.@$!&#*-+=%^;:'~/]/g.test(inputPass) ? setPassChar(\"valid\") : setPassChar(\"invalid\");\r\n\r\n        inputPass.length >= 7 ? setPassLength(\"valid\") : setPassLength(\"invalid\" );\r\n    }\r\n\r\n    function handelBox(e){\r\n        if(e.target.id === \"username\"){\r\n            if(inputName.length == 0){\r\n                setNamBox(\"\");\r\n            }\r\n            else if(nameDisplay === \"valid\"){\r\n                setNamBox(namBox = \"success\");\r\n            }\r\n            else if(nameDisplay === \"invalid\"){\r\n                setNamBox(namBox = \"error\");\r\n            }\r\n        }\r\n        else if(e.target.id === \"password\"){\r\n            if(inputPass.length == 0){\r\n                setPassBox(passBox = \"\");\r\n            }\r\n            else if(passLower === \"valid\" && passUpper === \"valid\" && passNumber === \"valid\" && passChar === \"valid\" && passLength === \"valid\"){\r\n                setPassBox(passBox = \"success\");\r\n                //console.log(\"yes\");\r\n            }\r\n            else{\r\n                setPassBox(passBox = \"error\");\r\n            }\r\n        }\r\n       \r\n        \r\n    }\r\n\r\n    function handelSubmit(){\r\n      if(nameDisplay == \"valid\" && passLower === \"valid\" && passUpper === \"valid\" && passNumber === \"valid\" && passChar === \"valid\" && passLength === \"valid\"){\r\n            setModalOpen({...modalOpen,\r\n                successModal : true,\r\n                errorModal:false\r\n            });\r\n        }\r\n        else{\r\n            setModalOpen({...modalOpen,\r\n                successModal : false,\r\n                errorModal:true\r\n            });\r\n        }\r\n    }\r\n\r\n    function handelBack(){\r\n        setModalOpen({...modalOpen,\r\n            successModal : false,\r\n            errorModal:false\r\n        });\r\n    }\r\n   \r\n    function showError(e){\r\n        e.preventDefault();\r\n        setModalOpen({...modalOpen,\r\n            successModal : false,\r\n            errorModal:true\r\n        });\r\n    }\r\n\r\n    \r\n\r\n    return <div className=\"form-box\">\r\n        <h1 id= \"header\" >Login Page</h1>\r\n        <form className=\"log-form\" onSubmit = {(e)=>e.preventDefault()}>\r\n            <label>\r\n                Username :\r\n                <br/>\r\n                <input type=\"text\" className={namBox} id=\"username\" value={inputName} onChange={(e)=>{handelName(e); handelBox(e)}} required/>\r\n                {namBox ? namBox === \"success\" ? <button title=\"Strong UserName\" style={{backgroundColor:\"transparent\",border:\"none\"}}><FaThumbsUp color=\"green\"/></button > : <button title=\"Click Here To Know More\" style={{backgroundColor:\"transparent\",border:\"none\",cursor:\"pointer\"}} onClick={showError}><FaThumbsDown color=\"red\"/></button> : null}\r\n            </label>\r\n            <br/>\r\n            \r\n            <label>\r\n                Password :\r\n                <br/>\r\n                <input type={passType ? \"password\" : \"text\"} className={passBox} id=\"password\" value={inputPass} onChange={(e)=>{handelPassword(e); handelBox(e)}} required />\r\n                {passBox ? passBox === \"success\" ? <button  title=\"Strong Password\" style={{backgroundColor:\"transparent\",border:\"none\"}}><FaThumbsUp color=\"green\"/></button> : <button title=\"Click Here To Know More\" style={{backgroundColor:\"transparent\",border:\"none\",cursor:\"pointer\"}} onClick={showError}><FaThumbsDown color=\"red\"/></button> : null}\r\n             </label>\r\n             \r\n              <br/><input type=\"checkbox\" onChange={()=>setPassType(!passType)}style={{width:\"auto\", marginBottom:\"20px\"}}/><span style={{fontSize:\"10px\",verticalAlign:\"20%\"}}> Show Password </span>     \r\n            \r\n            <br/>\r\n           \r\n            <div style = {{textAlign:\"center\"}}><button className = \"btn\" onClick = {()=>{\r\n                if(inputName.length > 0 && inputPass.length > 0){\r\n                    handelSubmit();\r\n                    }}\r\n                }>Submit\r\n            </button></div>\r\n        </form>\r\n\r\n        <Modal isOpen={modalOpen.errorModal} \r\n                onRequestClose={()=>setModalOpen({...modalOpen,\r\n                    successModal : false,\r\n                    errorModal:false\r\n                })}\r\n             style={\r\n                {\r\n                    overlay : {\r\n                        backgroundColor:\"grey\"\r\n                    },\r\n                    content:{\r\n                        \r\n                        paddingTop : \"100px\",\r\n                        border:\"10px solid red\",\r\n                        backgroundColor:\"#ffebe6\",\r\n                        width : \"350px\",\r\n                        marginLeft: \"auto\",\r\n                        marginRight:\"auto\",\r\n                        \r\n                    }\r\n                }\r\n            }\r\n        >\r\n        <div className=\"modal-box\">\r\n            <h3 style={{textAlign:\"start\"}}>User Name should only have : </h3>\r\n            <div className=\"error-box\" ><p id=\"unam\" className ={nameDisplay}><b>alpha-numeric or \"_\" or \".\"</b> characters</p></div>\r\n            \r\n\r\n            <h3 style={{textAlign:\"start\"}}>Password must contain the following:</h3>\r\n            <div className=\"error-box\">\r\n                <p id=\"letter\" className={passLower}>A <b>lowercase</b> letter</p>\r\n                <p id=\"capital\" className={passUpper}>A <b>capital (uppercase)</b> letter</p>\r\n                <p id=\"number\" className={passNumber}>A <b>number</b></p>\r\n                <p id=\"splChar\" className={passChar}>A <b>Spechial Character</b> character</p>\r\n                <p id=\"length\" className={passLength}>Minimum <b>8 characters</b></p>\r\n            </div>\r\n        </div>\r\n        <div style={{textAlign:\"center\"}}><button style={{cursor:\"pointer\",borderRadius:\"10px\",backgroundColor:\"#00ffff\",fontWeight:\"700\"}} onClick ={handelBack}> Back </button></div>\r\n        </Modal>\r\n\r\n        <Modal isOpen={modalOpen.successModal} \r\n            onRequestClose={()=>setModalOpen({...modalOpen,\r\n                successModal : false,\r\n                errorModal:false\r\n            })}\r\n            style={\r\n                {\r\n                    overlay : {\r\n                        backgroundColor:\"grey\"\r\n                    },\r\n                    content:{\r\n                        textAlign:\"center\",\r\n                        paddingTop : \"100px\",\r\n                        border:\"10px solid green\",\r\n                        backgroundColor:\"#f2ffe6\",\r\n                        width : \"300px\",\r\n                        marginLeft: \"auto\",\r\n                        marginRight:\"auto\",\r\n                        height: \"300px\"\r\n                    }\r\n                }\r\n            }\r\n        >\r\n            <div className=\"success-box\">\r\n                <h1>Congratulation......</h1>\r\n                <h4>You have successfully Loged in</h4>\r\n                <button style={{cursor:\"pointer\",borderRadius:\"10px\",backgroundColor:\"#00ffff\",fontWeight:\"700\"}} onClick ={reSet}> Log Out </button>\r\n            </div>\r\n        </Modal>\r\n    </div>\r\n}\r\n\r\nexport default Login;","import Login from \"./component/Login.js\";\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n     <Login/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}